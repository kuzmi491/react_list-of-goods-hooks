{"version":3,"sources":["App.tsx","Componets/GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSort","sortingByType","type","reorderedGoods","visibleGoods","sort","aGood","bGood","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","resetButtonOn","className","classNames","onClick","currGood","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASP,EAASU,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAAgB,SAACC,GACrBF,EAAQE,IAGJC,EA3CD,SACLb,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENQ,EAAY,YAAOd,GAmBzB,OAjBAc,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKX,EAASoB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKrB,EAASsB,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAITX,GACFQ,EAAaQ,UAGRR,EAoBgBS,CACrBpB,EAAiB,CAAEM,WAAUH,eAEzBkB,EAAgBlB,GAAcG,IAAaX,EAASU,KAE1D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEb,KAAK,SACLa,UAAWC,IACT,SACA,UACA,CACE,WAAYjB,IAAaX,EAASsB,WAGtCO,QAAS,kBACPhB,EAAcb,EAASsB,WAV3B,iCAgBA,wBACER,KAAK,SACLa,UAAWC,IACT,SACA,aACA,CACE,WAAYjB,IAAaX,EAASoB,SAGtCS,QAAS,kBACPhB,EAAcb,EAASoB,SAV3B,4BAgBA,wBACEN,KAAK,SACLa,UAAWC,IACT,SACA,aACA,CACE,YAAapB,IAGjBqB,QAzDe,WACrBpB,GAAW,SAAAqB,GAAQ,OAAKA,MA+CpB,qBAcCJ,GACC,wBACEZ,KAAK,SACLa,UAAU,4BACVE,QAvEW,WACnBjB,EAAQZ,EAASU,MACjBD,GAAW,IAkEL,sBAUJ,cAAC,EAAD,CAAUP,MAAOa,QEvIvBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1d6561d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './Componets';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((aGood, bGood) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return aGood.length - bGood.length;\n\n      case SortType.ALPHABET:\n        return aGood.localeCompare(bGood);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSort] = useState(SortType.NONE);\n\n  const resetSorting = () => {\n    setSort(SortType.NONE);\n    setReverse(false);\n  };\n\n  const reverseSorting = () => {\n    setReverse(currGood => !currGood);\n  };\n\n  const sortingByType = (type: SortType) => {\n    setSort(type);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n  const resetButtonOn = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => (\n            sortingByType(SortType.ALPHABET)\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => (\n            sortingByType(SortType.LENGTH)\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverseSorting}\n        >\n          Reverse\n        </button>\n\n        {resetButtonOn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}